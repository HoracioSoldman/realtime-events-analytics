version: '3.8'
services:
  pgdb:
    image: postgres:14.1-alpine
    container_name: pgdb_container
    restart: always
    environment:
      - POSTGRES_DB=click_stream
      - POSTGRES_USER=user_a
      - POSTGRES_PASSWORD=pwd_a
    ports:
      - '5454:5432'
    volumes: 
      - db-data:/opt/dbdata/postgresql/data
  
  pgadmin:
    image: dpage/pgadmin4
    depends_on: [pgdb]
    container_name: pgadmin_container
    restart: always
    ports:
      - "8088:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user_a@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: pwd_a
    volumes:
      - pgadmin-data:/opt/dbdata/pgadmin/data

  zookeeper:
    image: bitnami/zookeeper:3.9.0
    container_name: zookeeper_container
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - zookeeper_data:/bitnami
    ports:
      - 2181:2181

  kafka:
    image: bitnami/kafka:3.5.1
    container_name: kafka_container
    restart: on-failure
    depends_on: [zookeeper]
    environment:
      # KRaft settings 
      KAFKA_CFG_NODE_ID: 1001
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1001@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      
    volumes:
      - kafka_data:/bitnami
    ports:
    - 9092:9092


  debezium:
    image: debezium/connect:2.3.4.Final
    container_name: debezium_container
    restart: on-failure
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      # CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [kafka]
    ports:
      - 8083:8083
      
volumes:
  db-data:
    driver: local
  pgadmin-data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  
  