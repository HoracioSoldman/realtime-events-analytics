version: '3.8'
services:
  pgdb:
    image: postgres:14.1-alpine
    container_name: pgdb_container
    restart: always
    environment:
      - POSTGRES_DB=click_stream
      - POSTGRES_USER=user_a
      - POSTGRES_PASSWORD=pwd_a
    ports:
      - '5454:5432'
    volumes: 
      - db-data:/opt/dbdata/postgresql/data
  
  pgadmin:
    image: dpage/pgadmin4
    depends_on: [pgdb]
    container_name: pgadmin_container
    restart: always
    ports:
      - "8088:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user_a@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: pwd_a
    volumes:
      - pgadmin-data:/opt/dbdata/pgadmin/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.5
    container_name: zookeeper_container
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:7.3.5
    container_name: kafka_container
    restart: on-failure
    depends_on: [zookeeper]
    environment:
      KAFKA_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
    - 29092:29092


  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.5
    container_name: schema_registry_container
    restart: on-failure
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:29092"
      SCHEMA_REGISTRY_HOST_NAME: "localhost"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081" 
    depends_on: [zookeeper, kafka]
    ports:
      - "8081:8081"

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.5
    hostname: control-center
    container_name: control-center
    depends_on: [zookeeper, kafka, schema-registry]
    restart: on-failure
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://localhost:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  debezium:
    image: debezium/connect:2.4
    container_name: debezium_container
    restart: on-failure
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      STATUS_STORAGE_TOPIC: connect_statuses
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # ENABLE_DEBEZIUM_SCRIPTING: 'true'
      # KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      # VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      # CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [pgdb, zookeeper, kafka]
    links: 
      - zookeeper
      - pgdb
    ports:
      - 8083:8083
      
volumes:
  db-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  kafka_net:
    driver: "bridge"
  